require('dotenv').config();

const {BOT_TOKEN} = process.env;

const Telegraf = require("telegraf");
const session = require("telegraf/session");
const Extra = require ("telegraf/extra");
const Markup = require ("telegraf/markup");

//commands
const startCommand = require("./commands/start");
const AnketaStage = require("./stage/anketa");
const { callbackButton } = require('telegraf/markup');

const app = require("./express")
const redisClient = require("./redis")
const bot = require("./bot")

// middleware
bot.use(session())
bot.use(AnketaStage.middleware())

// commands
bot.start(startCommand());

bot.hears('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üìÑ',  (ctx)  =>  ctx.scene.enter('fio'));
bot.hears('–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É',  (ctx)=>{
    ctx.reply('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª', OkButton).then(data => setTimeout(() =>  
        ctx.telegram.editMessageText(data.chat.id, data.message_id, null, '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', Extra.markup()), 10000))

});


// Actions

bot.action(/Confirm/, ({ telegram, chat, callbackQuery, inlineMessageId, match }) => {
    const { message } = callbackQuery

    // –û—Ç–≤–µ—Ç –∑–∞—è–≤–æ—á–Ω–∏–∫—É
    const chatId = match.input.split('_')[1]
    telegram.sendMessage(chatId, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —Å–≤–æ—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.\nP.S. –°—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ 10 —Å–µ–∫—É–Ω–¥", GetButton);


    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
    const newText = `${message.text}\n\n–ó–∞—è–≤–∫–∞ –ü—Ä–∏–Ω—è—Ç–∞`
    telegram.editMessageText(chat.id, message.message_id, inlineMessageId, newText, Extra.markup())
});

bot.action(/Reject/, ({ telegram, chat, callbackQuery, inlineMessageId, match }) => {
    const { message } = callbackQuery

    // –û—Ç–≤–µ—Ç –∑–∞—è–≤–æ—á–Ω–∏–∫—É
    const chatId = match.input.split('_')[1]
    telegram.sendMessage(chatId, "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞");

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
    const newText = `${message.text}\n\n–ó–∞—è–≤–∫–∞ –û—Ç–∫–ª–æ–Ω–µ–Ω–∞`
    telegram.editMessageText(chat.id, message.message_id, inlineMessageId, newText, Extra.markup())
});

app.get('/', (req,res) => {
  console.log('YRA!!!!!!!!!!!!!!!!!!')
  res.send('privetik')
})

app.post('/fb_user', async (req, res) => {
    console.log(req.body)
    redisClient.get(`${req.body.tgUser}`, (err, data) => {
        const {name, username, phone, chatId} = JSON.parse(data)
        bot.telegram.sendMessage(process.env.ADMIN, 
`–§–∏–æ: ${name}, 
Tg UserName: @${username}, 
UserId: ${chatId}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${phone}, 

Facebook:
–ò–º—è: ${req.body.name}
id: ${req.body.id}`, 
        AdminButtons(chatId))
        bot.telegram.sendPhoto(process.env.ADMIN, `https://graph.facebook.com/${req.body.id}/picture?type=large`)
        res.send({status: 'OK'})
    })
})

const AdminButtons = (id)  => ({
    reply_markup:{
        inline_keyboard:[
            [{text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data: `Confirm_${id}`}],
            [{text: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data: `Reject_${id}`}],
        ], resize_keyboard: true, 
    }
})

const GetButton = {
    reply_markup:{
        keyboard:[
            [{text:'–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É'}],
        ], resize_keyboard: true, one_time_keyboard: true
    }
}

const OkButton = {
    reply_markup:{
        inline_keyboard:[
            [{text:'–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É', url:`https://t.me/joinchat/AAAAAEvxj1IUX8JT6cDbUg`}],
        ], resize_keyboard: true
    }
}
